/* Copyright 2023 Brian Low
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
#include QMK_KEYBOARD_H

#include keymap_uk.h

enum layer_names {
    base,
    symbol,
    number,
    function,
    utility
};

const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
/*
 * QWERTY
 * ,-----------------------------------------.                    ,-----------------------------------------.
 * |  `   |   1  |   2  |   3  |   4  |   5  |                    |   6  |   7  |   8  |   9  |   0  |  `   |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | ESC  |   Q  |   W  |   E  |   R  |   T  |                    |   Y  |   U  |   I  |   O  |   P  | Bspc |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | esc/ctrl  |   A  |   S  |   D  |   F  |   G  |-------.    ,-------|   H  |   J  |   K  |   L  |   ;  |  '   |
 * |------+------+------+------+------+------|  Mute |    | Pause |------+------+------+------+------+------|
 * |LShift|   Z  |   X  |   C  |   V  |   B  |-------|    |-------|   N  |   M  |   ,  |   .  |   /  |RShift|
 * `-----------------------------------------/       /     \      \-----------------------------------------'
 *            | LCTL | alt | LCMD | Enter | / num  /       \ Sym \  | Space | bspc | RGUI | RCTL |
 *            |      |      |      |      |/       /         \      \ |      |      |      |      |
 *            `----------------------------------'           '------''---------------------------'
 */
    [base] = LAYOUT(
        KC_GRV,   KC_1,   KC_2,    KC_3,    KC_4,    KC_5,                       KC_6,     KC_7,     KC_8,    KC_9,    KC_0,    KC_BSPC,
        KC_TAB,   KC_Q,   KC_W,    KC_E,    KC_R,    KC_T,                       KC_Y,     KC_U,     KC_I,    KC_O,    KC_P,    KC_GRV,
        MT(MOD_LCTL, KC_ESC),   KC_A,   KC_S,    KC_D,    KC_F,    KC_G,                       KC_H,     KC_J,     KC_K,    KC_L,    KC_SCLN, KC_QUOT,
        KC_LSFT,  KC_Z,   KC_X,    KC_C,    KC_V,    KC_B,    KC_MUTE,   KC_MPLY,KC_N,     KC_M,     KC_COMM, KC_DOT,  KC_SLSH, KC_RSFT,
        KC_LCTL, KC_LALT, KC_LCMD, MT(MOD_MEH, KC_ENT), MO(symbol),    MO(number), MT(MOD_HYPR, KC_SPACE),  KC_RCMD,  KC_RGUI, KC_RCTL
    ),

    [number] = LAYOUT(
        _______, _______, _______, _______, _______, _______,                   _______, KC_PSLS, KC_KP_ASTERISK, KC_KP_MINUS, _______, _______,
        _______, _______, _______, _______, _______, _______,                   KC_TAB, KC_7, KC_8, KC_9, KC_KP_PLUS, _______,
        _______, _______, _______, _______, _______, _______,                   _______, KC_4, KC_5, KC_6, KC_EQUAL, MO(function),
        _______, _______, _______, _______, _______, _______, _______,  _______, KC_0, KC_1, KC_2, KC_3, KC_ENT, _______,
        _______, _______, _______, _______, _______,                              _______, KC_SPACE, KC_0, _______, _______
    ),

    [symbol] = LAYOUT(
        _______, _______, _______, _______, _______, _______,           _______, _______, _______, _______, _______, _______,
        _______, _______, _______, _______, S(KC_4), _______,          _______, {KC_LEFT_ALT,KC_KP_0,KC_KP_1,KC_KP_6,KC_KP_3}, _______, _______, _______, _______,
        _______, _______, S(KC_LBRC), KC_LBRC, S(KC_9), KC_BACKSLASH,           KC_SLASH, S(KC_0), KC_RBRC, S(KC_RBRC), _______, _______,
        _______, _______, _______, _______, S(KC_MINUS), S(KC_BACKSLASH), _______,      _______, S(KC_SLASH), KC_MINUS, _______, _______, _______, _______,
        _______, _______, _______, _______, _______, S(KC_COMMA),           S(KC_DOT), _______, _______, _______, _______, _______
    ),

    [navigation] = LAYOUT(

    ),

    [utility] = LAYOUT(

    )
};

#if defined(ENCODER_MAP_ENABLE)
const uint16_t PROGMEM encoder_map[][NUM_ENCODERS][NUM_DIRECTIONS] = {
    { ENCODER_CCW_CW(KC_VOLD, KC_VOLU), ENCODER_CCW_CW(KC_MPRV, KC_MNXT) },
};
#endif
